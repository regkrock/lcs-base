{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:12:02.414015-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:12:17.257215-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "2QZuBi71DQCTyCt2AiRrCA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The following are REGEX examples that work."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:07:00.170979-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:47:17.225765-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GCpq9C31DQCRy0+vAiRrCA=="
				},
				"code" : "'42' matchesRegex: '\\d+'.\r'42' matchesRegex: '\\d\\d'.\r\r'A' matchesRegex: '[A-Z]'.\r'K8A6W8' matchesRegex: '[A-Z][0-9][A-Z][0-9][A-Z][0-9]'.\r'K8A6W8' matchesRegex: '[[A-Z][0-9]]+'.\r'K8A 6W8' matchesRegex: '[A-Z][0-9][A-Z]\\s[0-9][A-Z][0-9]'.\r'K8A 6W8' matchesRegex: '\\A\\d\\A\\s\\d\\A\\d'.\r\r' ' matchesRegex: '\\s'.\t\"Search for a space\"\r'B1A 1A1' matchesRegex: '\\A\\d\\A\\s\\d\\A\\d'.\t\"Search for a space\""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:43:23.570593-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-06-30T12:46:10.202969-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oy6Odi71DQCXAKdaAiRrCA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**Syntax What it represents**\na \t\t\t\t\tliteral match of character a\n. \t\t\t\t\tmatch any char\n( · · · ) \t\t\tgroup subexpression\n\\ \t\t\t\t\tescape following special character\n* \t\t\t\t\tKleene star — match previous regex zero or more times\n+ \t\t\t\t\tmatch previous regex one or more times\n? \t\t\t\t\tmatch previous regex zero times or once\n| \t\t\t\t\tmatch choice of left and right regex\n[abcd] \t\tmatch choice of characters abcd\n[ˆ abcd] \tmatch negated choice of characters\n[0-9]\t\t\tmatch range of characters 0 to 9\n\\w\t\t\t\tmatch alphanumeric\n\\W \t\t\t\tmatch non-alphanumeric\n\\d \t\t\t\tmatch digit\n\\D \t\t\t\tmatch non-digit\n\\s \t\t\t\tmatch space\n\\S \t\t\t\tmatch non-space\n**Table 6.1: Regex Syntax in a Nutshell**"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-06-30T12:06:38.314881-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-06-30T12:06:38.314881-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Regex"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "78a9bff2-2df5-0d00-91a8-a33c02246b08"
	}
}