{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T11:52:04.718485-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T11:52:04.718485-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xwf2Ib7yDQCJRDSIDre9XQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T11:52:29.475869-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T11:57:15.417532-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0MlvI77yDQCJRoXTDre9XQ=="
				},
				"code" : "\"This is what needs to be returned to show a UML diagram\"\r\"Association with key: Origin Class value: (Array of arrays with (Array with (1) association name and (2) Connected Class))\"\r\t^ {\r\t\tLcsSlotModel -> {{'slotDefintions'. LcsSlotDefinition}}.\r\t\tLcsSlotDefinition -> {\r\t\t\t{'parent'. LcsSlotModel}.\r\t\t\t{'domainClass'. LcsBaseDomainObject}\r\t\t\t\t\t\t\t\t}.\r\t\tLcsBaseDomainObject -> {{'slotModel'. LcsSlotModel}}.\r\t\tLcsSlotModel -> {{'domainClass'. LcsBaseDomainObject}}\r\t\t}"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T12:27:48.681625-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-30T21:30:31.228368-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GEnAob7yDQCPqN55Dre9XQ=="
				},
				"code" : "\" sequenceableCollectionHierarchy - Existing classes are in gray, proposed classes apear in blue \"\r\t| m umlModelClasses|\r\tumlModelClasses := {SequenceableCollection.\r\t\t\t\tArrayedCollection.\r\t\t\t\tLcsProposedClass new classname: 'LxxSample'; superclassName:  #SequenceableCollection.\r\t\t\t\tLcsProposedClass new classname: 'LxxSample2'; superclassName: 'LxxSample'\r\t\t\t\t\"Array.\r\t\t\t\tString.\r\t\t\t\tByteString.\r\t\t\t\tSymbol.\r\t\t\t\tText.\r\t\t\t\tOrderedCollection.\r\t\t\t\tSortedCollection.\r\t\t\t\tLinkedList.\r\t\t\t\tInterval\"}.\r\tm := GtMondrian new.\r\tm nodes\r\t\tstencil: [ :c | \r\t\t\tBrLabel new\r\t\t\t\tborder: (BlBorder paint: (c isClass ifTrue: [ Color gray ] ifFalse: [ Color blue]));\r\t\t\t\ttext: (c isClass ifTrue: [ c name ] ifFalse: [ c classname asRopedText foreground: Color blue]);\r\t\t\t\taptitude: (\r\t\t\t\t\tBrGlamorousLabelAptitude new + (\r\t\t\t\t\tBrStyleCommonAptitude new hovered: [:aStyle | aStyle background: (Color blue alpha: 0.5) ]));\r\t\t\t\twhen: BlClickEvent do: [ :e | \r\t\t\t\t\tc isClass ifTrue: [ e target phlow spawnTool: (GtClassCoderTool forClass: c). e consumed: true ] ];\r\t\t\t\tpadding: (BlInsets all: 5) ];\r\t\twith: umlModelClasses.\r\tm edges\r\t\tstencil: [ :c | \r\t\t\tBlLineElement new\r\t\t\t\tborder: (BlBorder paint: (c isClass ifTrue: [ Color gray ] ifFalse: [ Color blue]));\r\t\t\t\tfromHead: (BlArrowheadTriangle new\r\t\t\t\t\t\tscale: 4;\r\t\t\t\t\t\tborder: (BlBorder paint: (c isClass ifTrue: [ Color gray ] ifFalse: [ Color blue ]))) ];\r\t\t\tconnectFrom: [ :each | \r\t\t\t\teach isClass \r\t\t\t\t\tifTrue: [ each superclass ] \r\t\t\t\t\tifFalse: [ each superclass ifNil: [ umlModelClasses detect: [ :e | e classname = each className ] ] ] ].\r\tm layout tree levelDistance: 20.\r\t^ m"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-05-30T11:52:23.43001-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-05-30T11:52:23.43001-04:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "UML Diagrams"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "4005f621-bef2-0d00-8943-abd10eb7bd5d"
	}
}